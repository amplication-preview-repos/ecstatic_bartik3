datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Review {
  comment   String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  product   Product? @relation(fields: [productId], references: [id])
  productId String?
  rating    Int?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Order {
  createdAt  DateTime         @default(now())
  id         String           @id @default(cuid())
  orderItems OrderItem[]
  status     EnumOrderStatus?
  total      Float?
  updatedAt  DateTime         @updatedAt
  user       User?            @relation(fields: [userId], references: [id])
  userId     String?
}

model OrderItem {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?
  product   Product? @relation(fields: [productId], references: [id])
  productId String?
  quantity  Int?
  updatedAt DateTime @updatedAt
}

model Product {
  createdAt   DateTime    @default(now())
  description String?
  id          String      @id @default(cuid())
  name        String?
  orderItems  OrderItem[]
  price       Float?
  reviews     Review[]
  stock       Int?
  updatedAt   DateTime    @updatedAt
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  orders    Order[]
  password  String
  reviews   Review[]
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Role {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  name      String?
  updatedAt DateTime @updatedAt
}

enum EnumOrderStatus {
  Option1
}
